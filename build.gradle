import io.swagger.v3.oas.models.servers.Server
import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar
buildscript{
    ext {
        restdocsApiSpecVersion = '0.17.1'
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    // 4. swaggerUI 플러그인 추가
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
ext {
    //set('snippetsDir', file("build/snippets"))

    //snippetsDir = file "build/snippets"
}
configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
    // 9. SwaggerUI 추가
    swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

tasks.named('test') {
    //outputs.dir snippetsDir
    println '!!!!!!test'
    useJUnitPlatform()
}




// 5. 생성된 API 스펙이 어느 위치에 있는지 지정
swaggerSources {
    println project.layout.buildDirectory.asFile.get()
    sample {
        setInputFile(file("${project.layout.buildDirectory.asFile.get()}/api-spec/openapi3.yaml"))
    }
}

openapi3 {
    servers = [
            { url = "http://localhost:8080" }
    ] as List<? extends Closure<Server>>
    title = "API 문서"
    description = "RestDocsWithSwagger Docs"
    version = "0.0.1"
    format = "yaml"

    println '-----------------'
    println outputDirectory
    println '-----------------'
}


for(config in configurations) {
    println config
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'
}

tasks.register('copySwaagerUI'){
    dependsOn generateSwaggerUISample
    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()
    copy {
        from "${generateSwaggerUISampleTask.outputDir}"
        into "${project.layout.buildDirectory.asFile.get()}/resources/main/static/docs"
    }
    println ("${generateSwaggerUISampleTask.outputDir}")
    println ("${project.layout.buildDirectory.asFile.get()}/resources/main/static/docs")
}

tasks.withType(BootJar).configureEach {
    dependsOn 'copySwaagerUI'
}

